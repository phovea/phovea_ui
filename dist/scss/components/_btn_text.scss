
// light-or-dark($color)
// Use contrast against white or black to determine if a color is "light" or "dark"
// Adapted from: https://medium.com/dev-channel/using-sass-to-automatically-pick-text-colors-4ba7645d2796
@function light-or-dark($color) {
  $light-contrast: contrast-ratio($color, $white);
  $dark-contrast: contrast-ratio($color, $black);

  @if $light-contrast > $dark-contrast {
    // Contrast against white is higher than against black, so, this is a dark color
    @return "dark";
  } @else {
    @return "light";
  }
}

// a11y-color($color-1, $color-2)
// $color-1: foreground color
// $color-2: background color
// Goal: Return 2 colors that pass for the chosen WCAG level without changing the Hue of the color
// ratio: 3.0, 4.5 (= AA compliant), or 7.0
@function a11y-color($color-1, $color-2, $lod-color-2: 'null', $ratio: 4.5) {
  $adjust-color-1: 'false';
  // Calculate the first contrast ratio of the given pair
  $original-contrast: contrast-ratio($color-1, $color-2);

  @if $original-contrast >= $ratio {
    // If we pass the ratio already, return the original color
    @return ($color-1, $color-2);
  } @else {
    // Doesn't pass
    // Should the color be lightened or darkened?
    $color-1-lod: light-or-dark($color-1);
    $color-2-lod: light-or-dark($color-2);

    // Set a "step" value to lighten or darken a color
    // Note: Higher percentage steps means faster compile time, but we might overstep the required threshold too far with something higher than 5%
    $step: 2%;

    @if $color-2-lod == 'light' and $lod-color-2 == 'lighter' {
      // if $color-1 is light and $lod-color-2 is lighter -> darken $color-2
      $adjust-color-1: 'true';
      $step: - $step;
    }
    @else if $color-2-lod == 'light' and $color-1-lod == 'light' {
      // Both are light colors, darken the color-1
      $step: - $step;
    } @else if $color-2-lod == 'dark' and $color-1-lod == 'light' {
      // color-1 is light, color-2 is dark but does not pass, darken more
      $step: - $step;
    }

    // Loop through with a @while statement until the color combination passes our required ratio. Scale the color by our step value until the expression is false
    // This might take some depending on the colors -> pay attention that the loop is not infinite!
    @while contrast-ratio($color-1, $color-2) < $ratio {
      @if $adjust-color-1 == 'true' {
        $color-1: scale-color($color-1, $lightness: $step, $saturation: $step/2)
      }
      @else {
        $color-2: scale-color($color-2, $lightness: $step, $saturation: $step/2);
      }
    }
    @return ($color-1, $color-2);
  }
}


@mixin btn-text-common() {

  // Align all children vertically
  > * {
    vertical-align: middle;
  }
}


// also add gray variants to use i.e. .btn-text-gray
// $theme-colors-and-gray: map-merge(("gray": $gray-600), $theme-colors);

@each $color, $value in $theme-colors {
  $colors: a11y-color(if($color=='dark', tint-color($value, 10%), shade-color($value, 10%)), if($color=='dark', tint-color($value, 90%), tint-color($value, 85%)), 'lighter');
  $fg: nth($colors, 1);
  $bg: nth($colors, 2);
  $colors-active: a11y-color(shade-color($value, 20%), tint-color($value, 65%), 'lighter');
  $fg-active: nth($colors-active, 1);
  $bg-active: nth($colors-active, 2);

  // btn-text has no background or border, and only sets the font-color.
  .btn-text-#{$color} {
    @include button-variant(
      transparent, // background
      transparent, // border
      if($color=='dark', tint-color($value, 10%), $value), // color

      transparent, // hover-background
      transparent, // hover-border
      if($color=='dark', tint-color($value, 25%), tint-color($value, 20%)), // hover-color

      transparent, // active-background
      transparent, // active-border
      if($color=='dark', shade-color($value, 10%), shade-color($value, 30%)), // active-color

      transparent, // disabled-background
      transparent, // disabled-border
      $gray-500, // disabled-color
    );

    @include btn-text-common();
  }


  // btn-text has no background or border, and only sets the font-color. The background is only set on hover
  .btn-text-hover-bg-#{$color} {
    @include button-variant(
      transparent, // background
      transparent, // border
      $value, // color

      if($color=='light', shade-color($value, 70%), if($color=='dark', $gray-200, $bg)), // hover-background
      transparent, // hover-border
      if($color=='light', shade-color($value, 10%), $fg), // hover-color

      if($color=='light', shade-color($value, 65%), if($color=='dark', $gray-300, $bg-active)), // active-background
      transparent, // active-border
      if($color=='light', shade-color($value, 10%), $fg-active), // active-color

      transparent, // disabled-background
      transparent, // disabled-border
      $gray-500, // disabled-color
    );

    @include btn-text-common();
  }
}
